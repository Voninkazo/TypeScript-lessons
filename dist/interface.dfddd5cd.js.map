{"version":3,"sources":["src/interfacesLessons.ts","src/interface.ts"],"names":[],"mappings":";;;;;;AAOA,IAAK,IAAL;;AAAA,CAAA,UAAK,IAAL,EAAS;AACL,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACH,CAJD,EAAK,IAAI,KAAJ,IAAI,GAAA,EAAA,CAAT;;AAMA,OAAA,CAAA,OAAA,GAAe,IAAf;AAIA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AAClB,EAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,UAAA,CAAA,UAAA,CAAA,GAAA,WAAA;AACH,CAJD,EAAY,UAAU,GAAV,OAAA,CAAA,UAAA,KAAA,OAAA,CAAA,UAAA,GAAU,EAAV,CAAZ;;;;;;;;;;;;;;;;;;;ACjBA,IAAA,mBAAA,GAAA,YAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;AAEA,IAAM,OAAO,GAAG,SAAV,OAAU,CAAC,IAAD,EAAe,GAAf,EAA0B;AACtC,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,SAAO,IAAP;AACH,CAHD;;AAKA,OAAO,CAAC,uBAAD,EAA0B,CAA1B,CAAP;;AAUA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,EAAD,EAAsB;MAAnB,IAAI,GAAA,EAAA,CAAA;MAAE,GAAG,GAAA,EAAA,CAAA;AAC1B,EAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,SAAO;AAAE,IAAA,IAAI,EAAA,IAAN;AAAQ,IAAA,GAAG,EAAA;AAAX,GAAP;AACH,CAHD;;AAKA,SAAS,CAAC;AACN,EAAA,IAAI,EAAE,OADA;AAEN,EAAA,GAAG,EAAE;AAFC,CAAD,CAAT;AAIA,SAAS,CAAC;AACN,EAAA,IAAI,EAAE;AADA,CAAD,CAAT;;AAMA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,WAAD,EAAkB,CAAO,CAA/C;;AACA,OAAO,CAAC,GAAR,CAAY,mBAAA,CAAA,OAAA,CAAK,IAAjB;;AAEA,IAAM,4BAA4B,GAAG,SAA/B,4BAA+B,CAAC,WAAD,EAAwB,CAAO,CAApE;;AACA,OAAO,CAAC,GAAR,CAAY,mBAAA,CAAA,UAAA,CAAW,QAAvB","file":"interface.dfddd5cd.js","sourceRoot":"..","sourcesContent":["export interface Person {\r\n    name: string;\r\n    age?: number;\r\n}\r\n\r\n//Enums\r\n\r\nenum Type {\r\n    Video,\r\n    Quiz,\r\n    BlogPost\r\n}\r\n\r\nexport default Type;\r\n\r\n//String enums\r\n\r\nexport enum TypeString {\r\n    Video = 'VIDEO',\r\n    Quiz = 'QUIZ',\r\n    BlogPost = 'BLOG_POST'\r\n}\r\n\r\n","import Type, { Person, TypeString } from \"./interfacesLessons\";\r\n\r\nconst sayName = (name: string, age: number): string => {\r\n    console.log(name);\r\n    return name;\r\n}\r\n\r\nsayName('name&numberMustGoHere', 3);\r\n// sayName(4, 'itisNeedtoBeOrdered')\r\n\r\n// instead we can do this\r\n\r\n// interface Person {\r\n    // name: string;\r\n    // age?: number;\r\n// }\r\n\r\nconst sayPerson = ({ name, age }: Person): Person => {\r\n    console.log(name);\r\n    return { name, age };\r\n}\r\n\r\nsayPerson({\r\n    name: 'Sandy',\r\n    age: 50\r\n});\r\nsayPerson({\r\n    name: 'Sandy'\r\n});//without one of the objec\r\n\r\n//ENUMS\r\n\r\nconst createContent = (contentType: Type) => {}\r\nconsole.log(Type.Quiz);\r\n\r\nconst createContentWithStringEnums = (contentType: TypeString) => {}\r\nconsole.log(TypeString.BlogPost);\r\n"]}